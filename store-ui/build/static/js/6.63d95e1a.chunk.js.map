{"version":3,"sources":["config.js","pages/batchList/AddBatchForm.js","pages/batchList/BatchList.js"],"names":["envVars","process","configurations","Object","freeze","url","NODE_ENV","window","location","origin","REACT_APP_SERVICE_URL","RangePicker","DatePicker","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","rangeConfig","rules","type","message","AddBatchForm","props","onFinish","data","closeModal","batch","rangePicker","format","axios","post","config","then","state","name","this","Item","label","TextArea","offset","htmlType","Component","BatchList","redirectToDetails","item","history","push","pathname","id","loading","error","visible","get","res","setState","catch","err","getBatchDetails","ghost","title","extra","onClick","key","className","itemLayout","dataSource","renderItem","actions","avatar","active","Meta","href","description","start_date","end_date","fulfilled","onOk","handleOk","footer","onCancel"],"mappings":"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","file":"static/js/6.63d95e1a.chunk.js","sourcesContent":["const envVars = process.env;\n\nconst configurations = Object.freeze({\n  url: envVars.NODE_ENV === 'production' ? window.location.origin : envVars.REACT_APP_SERVICE_URL\n})\n\nexport default configurations;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Form, Input, DatePicker } from 'antd';\nimport config from '../../config';\n\nconst { RangePicker } = DatePicker;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\n\nconst validateMessages = {\n  required: '${label} is required!',\n  types: {\n    email: '${label} is not validate email!',\n    number: '${label} is not a validate number!',\n  },\n  number: {\n    range: '${label} must be between ${min} and ${max}',\n  },\n};\n\nconst rangeConfig = {\n  rules: [{ type: 'array', required: true, message: 'Please select time!' }],\n};\n\n\nclass AddBatchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  onFinish = (data) => {\n    const { closeModal } = this.props;\n    const batch = { ...data.batch };\n    batch['start_date'] = data.rangePicker[0].format('YYYY-MM-DD');\n    batch['end_date'] = data.rangePicker[1].format('YYYY-MM-DD');\n    axios.post(`${config.url}/batch/`, batch)\n      .then(() => closeModal())\n  }\n\n  render() {\n    return (\n      <Form {...layout} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={validateMessages}>\n        <Form.Item name={['batch', 'name']} label=\"Name\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"rangePicker\" label=\"RangePicker\" {...rangeConfig}>\n          <RangePicker />\n        </Form.Item>\n        <Form.Item name={['batch', 'note']} label=\"Note\">\n          <Input.TextArea />\n        </Form.Item>\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n        </Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n}\n\nexport default AddBatchForm;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { List, Skeleton, PageHeader, Button, Modal } from 'antd';\nimport config from '../../config';\nimport AddBatchForm from './AddBatchForm';\n\nclass BatchList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      error: false,\n      data: [],\n      visible: false,\n    }\n  }\n\n  getBatchDetails() {\n    axios.get(`${config.url}/batch/`)\n      .then(res => this.setState({\n        loading: false,\n        data: res.data,\n      }))\n      .catch(err => this.setState({\n        loading: false,\n        error: true,\n      }))\n  }\n\n  componentDidMount() {\n    this.getBatchDetails()  \n  }\n\n  redirectToDetails = (item) => {\n    const { history } = this.props;\n    history.push({ pathname: `/batch/${item.id}`, state: { item } });\n  }\n\n  render() {\n    const { data, error, loading, visible } = this.state;\n\n    if (loading) return <>Loading... </>;\n    if (error) return <>Some Error occurred..</>\n\n    return (\n      <>\n        <PageHeader\n          ghost={false}\n          title=\"Batch List\"\n          extra={[\n            <Button onClick={() => this.setState({ visible: true })} key=\"1\" type=\"primary\">\n              Add Batch\n          </Button>,\n          ]}\n        >\n          <List\n            className=\"demo-loadmore-list\"\n            itemLayout=\"horizontal\"\n            dataSource={data}\n            renderItem={item => (\n              <List.Item\n                actions={[<a key=\"list-loadmore-more\" onClick={() => this.redirectToDetails(item)}>Details</a>]}\n              >\n                <Skeleton avatar title={false} loading={item.loading} active>\n                  <List.Item.Meta\n                    title={<a href=\"https://ant.design\">{item.name}</a>}\n                    description={`start date: ${item.start_date} end date: ${item.end_date}`}\n                  />\n                  <div>{item.fulfilled ? 'Fulfilled' : 'Open'}</div>\n                </Skeleton>\n              </List.Item>\n            )}\n          />\n        </PageHeader>\n        <Modal\n          title=\"Basic Modal\"\n          visible={visible}\n          onOk={this.handleOk}\n          footer={null}\n          onCancel={() => this.setState({ visible: false })}\n        >\n          <AddBatchForm\n            closeModal={() => {\n              this.getBatchDetails();\n              this.setState({ visible: false });\n            }}\n          />\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default BatchList;"],"sourceRoot":""}